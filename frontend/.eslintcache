[{"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\index.js":"1","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\App.js":"2","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Header.js":"3","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Footer.js":"4","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\Home.js":"5","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\MetaData.js":"6","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\store.js":"7","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\productReducers.js":"8","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\productConstants.js":"9","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\productActions.js":"10","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\product.js":"11","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Loader.js":"12","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\productDetails.js":"13","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Search.js":"14","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\userReducers.js":"15","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\userConstants.js":"16","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Login.js":"17","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\userActions.js":"18","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Register.js":"19","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Profile.js":"20","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\route\\ProtectedRoute.js":"21","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\UpdateProfile.js":"22","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\UpdatePassword.js":"23","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\ForgotPassword.js":"24","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\NewPassword.js":"25","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\cartReducers.js":"26","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\cartActions.js":"28","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Cart.js":"29","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Shipping.js":"30","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\CheckoutSteps.js":"31","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\ConfirmOrder.js":"32","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Payment.js":"33","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\orderReducers.js":"34","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\orderConstants.js":"35","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\orderActions.js":"36","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\OrderSuccess.js":"37","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\order\\ListOrder.js":"38","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\order\\OrderDetails.js":"39","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\review\\ListReviews.js":"40","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\Dashboard.js":"41","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\Sidebar.js":"42","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProductsList.js":"43","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\NewProduct.js":"44","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UpdateProduct.js":"45","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\OrdersList.js":"46","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProcessOrder.js":"47","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UsersList.js":"48","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UpdateUser.js":"49","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProductReviews.js":"50","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\Product.js":"51"},{"size":593,"mtime":1658154640651,"results":"52","hashOfConfig":"53"},{"size":4899,"mtime":1658450487193,"results":"54","hashOfConfig":"53"},{"size":3463,"mtime":1658437750935,"results":"55","hashOfConfig":"53"},{"size":359,"mtime":1656858980690,"results":"56","hashOfConfig":"53"},{"size":9767,"mtime":1658522400325,"results":"57","hashOfConfig":"53"},{"size":234,"mtime":1656934486221,"results":"58","hashOfConfig":"53"},{"size":1778,"mtime":1658437135454,"results":"59","hashOfConfig":"53"},{"size":7326,"mtime":1658437072441,"results":"60","hashOfConfig":"53"},{"size":1946,"mtime":1658363828522,"results":"61","hashOfConfig":"53"},{"size":6236,"mtime":1658437192590,"results":"62","hashOfConfig":"53"},{"size":1252,"mtime":1658441465609,"results":"63","hashOfConfig":"53"},{"size":133,"mtime":1657026593866,"results":"64","hashOfConfig":"53"},{"size":9712,"mtime":1658400734287,"results":"65","hashOfConfig":"53"},{"size":1054,"mtime":1657053790243,"results":"66","hashOfConfig":"53"},{"size":6711,"mtime":1658435437541,"results":"67","hashOfConfig":"53"},{"size":2260,"mtime":1658429898218,"results":"68","hashOfConfig":"53"},{"size":3390,"mtime":1658335988014,"results":"69","hashOfConfig":"53"},{"size":7832,"mtime":1658435543853,"results":"70","hashOfConfig":"53"},{"size":5641,"mtime":1658004068637,"results":"71","hashOfConfig":"53"},{"size":2073,"mtime":1657992027985,"results":"72","hashOfConfig":"53"},{"size":919,"mtime":1658363396110,"results":"73","hashOfConfig":"53"},{"size":5163,"mtime":1658003447585,"results":"74","hashOfConfig":"53"},{"size":2976,"mtime":1658009167725,"results":"75","hashOfConfig":"53"},{"size":2241,"mtime":1658009405917,"results":"76","hashOfConfig":"53"},{"size":2953,"mtime":1658064115434,"results":"77","hashOfConfig":"53"},{"size":1159,"mtime":1658215335100,"results":"78","hashOfConfig":"53"},{"size":154,"mtime":1658214922034,"results":"79","hashOfConfig":"53"},{"size":1282,"mtime":1658445039574,"results":"80","hashOfConfig":"53"},{"size":4717,"mtime":1658444735460,"results":"81","hashOfConfig":"53"},{"size":4732,"mtime":1658450539606,"results":"82","hashOfConfig":"53"},{"size":1841,"mtime":1658337352499,"results":"83","hashOfConfig":"53"},{"size":3849,"mtime":1658448572881,"results":"84","hashOfConfig":"53"},{"size":5593,"mtime":1658351850651,"results":"85","hashOfConfig":"53"},{"size":4590,"mtime":1658429284088,"results":"86","hashOfConfig":"53"},{"size":1186,"mtime":1658350972184,"results":"87","hashOfConfig":"53"},{"size":3889,"mtime":1658429413329,"results":"88","hashOfConfig":"53"},{"size":756,"mtime":1658353785860,"results":"89","hashOfConfig":"53"},{"size":2813,"mtime":1658447142705,"results":"90","hashOfConfig":"53"},{"size":3866,"mtime":1658447305411,"results":"91","hashOfConfig":"53"},{"size":759,"mtime":1658512082053,"results":"92","hashOfConfig":"53"},{"size":5900,"mtime":1658430678372,"results":"93","hashOfConfig":"53"},{"size":1681,"mtime":1658362819482,"results":"94","hashOfConfig":"53"},{"size":3916,"mtime":1658402295265,"results":"95","hashOfConfig":"53"},{"size":8407,"mtime":1658515186584,"results":"96","hashOfConfig":"53"},{"size":9503,"mtime":1658406434552,"results":"97","hashOfConfig":"53"},{"size":3957,"mtime":1658429617962,"results":"98","hashOfConfig":"53"},{"size":6429,"mtime":1658428156532,"results":"99","hashOfConfig":"53"},{"size":3666,"mtime":1658435705830,"results":"100","hashOfConfig":"53"},{"size":4716,"mtime":1658434784932,"results":"101","hashOfConfig":"53"},{"size":5223,"mtime":1658437342201,"results":"102","hashOfConfig":"53"},{"size":1252,"mtime":1658441465609,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"12q79wm",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"106"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\index.js",[],["219","220"],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\App.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Header.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Footer.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\Home.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\store.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\productActions.js",["221"],"import axios from 'axios';\r\n\r\nimport { \r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) =>\r\nasync (dispatch) => {\r\n    \r\n    try {\r\n\r\n        dispatch({type: ALL_PRODUCTS_REQUEST});\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if(category){\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n        \r\n        const { data } = await axios.get(link)\r\n        \r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS, \r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL, \r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    \r\n    try {\r\n\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`) \r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS, \r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL, \r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get product reviews\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}\r\n","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\product.js",["222"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product, col }) => {\r\n    \r\n  return (\r\n      <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n          <div className=\"card p-3 rounded\">\r\n              <img\r\n                  className=\"card-img-top mx-auto\"\r\n                  src={product.images[0].url} \r\n                  \r\n              />\r\n              <div className=\"card-body d-flex flex-column\">\r\n                  <h5 className=\"card-title\">\r\n                      <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n                  </h5>\r\n                  <div className=\"ratings mt-auto\">\r\n                      <div className=\"rating-outer\">\r\n                          <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                      </div>\r\n                      <span id=\"no_of_reviews\">({product.numofReviews} Reviews)</span>\r\n                  </div>\r\n                  <p className=\"card-text\">₹{product.price}</p>\r\n                  <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n              </div>\r\n          </div>\r\n      </div> \r\n  )\r\n}\r\n\r\nexport default Product",["223","224"],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Loader.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\productDetails.js",["225"],"import React, { Fragment, useState, useEffect} from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductDetails = ({ match }) => { \r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert(); \r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id)) \r\n        \r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n        \r\n    }, [dispatch, alert, error, match.params.id, success])\r\n\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n \r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if(count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty) \r\n        \r\n\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if(count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n        \r\n    }\r\n     \r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n    \r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n\r\n  return (\r\n\r\n      <Fragment>\r\n          {loading ? <Loader /> : (\r\n              <Fragment>\r\n                  <MetaData title={product.name} />\r\n                  <div className=\"row f-flex justify-content-around\">\r\n                      <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                          <Carousel pause='hover'>\r\n                              {product.images && product.images.map(image => (\r\n                                  <Carousel.Item key={image.public_id}>\r\n                                      <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                  </Carousel.Item>\r\n\r\n                              ))}\r\n                          </Carousel>\r\n                      </div>\r\n\r\n                      <div className=\"col-12 col-lg-5 mt-5\">\r\n                          <h3>{product.name}</h3>\r\n                          <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                          <hr />\r\n\r\n                          <div className=\"rating-outer\">\r\n                              <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                          </div>\r\n                          <span id=\"no_of_reviews\">({product.numofReviews} Reviews)</span>\r\n\r\n                          <hr />\r\n\r\n                          <p id=\"product_price\">₹{product.price}</p>\r\n                          <div className=\"stockCounter d-inline\">\r\n                              <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                              <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                              <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                          </div>\r\n                          <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                          <hr />\r\n\r\n                          <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                          <hr />\r\n\r\n                          <h4 className=\"mt-2\">Description:</h4>\r\n                          <p>{product.description}</p>\r\n                          <hr />\r\n                          <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                          {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                              Submit Your Review\r\n                          </button>\r\n                              :\r\n                              <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                          }\r\n\r\n                          <div className=\"row mt-2 mb-5\">\r\n                              <div className=\"rating w-50\">\r\n\r\n                                  <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                      <div className=\"modal-dialog\" role=\"document\">\r\n                                          <div className=\"modal-content\">\r\n                                              <div className=\"modal-header\">\r\n                                                  <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                      <span aria-hidden=\"true\">&times;</span>\r\n                                                  </button>\r\n                                              </div>\r\n                                              <div className=\"modal-body\">\r\n\r\n                                                  <ul className=\"stars\" >\r\n                                                      <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                      <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                      <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                      <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                      <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                  </ul>\r\n\r\n                                                  <textarea\r\n                                                      name=\"review\"\r\n                                                      id=\"review\" className=\"form-control mt-3\"\r\n                                                      value={comment}\r\n                                                      onChange={(e) => setComment(e.target.value)}\r\n                                                  >\r\n\r\n                                                  </textarea>\r\n\r\n                                                  <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                  {product.reviews && product.reviews.length > 0 && (\r\n                      <ListReviews reviews={product.reviews} />\r\n                  )}\r\n\r\n              </Fragment>\r\n          )}\r\n      </Fragment>\r\n     \r\n)}\r\n\r\nexport default ProductDetails","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\layout\\Search.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Login.js",["226"],"import React, { Fragment, useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n\r\n        if(isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if(error){\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n  return (\r\n      <Fragment>\r\n          {loading ? <Loader /> : (\r\n              <Fragment>\r\n                  <MetaData title={'Login'} />\r\n\r\n                  <div className=\"row wrapper\">\r\n                      <div className=\"col-10 col-lg-5\">\r\n                          <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                              <h1 className=\"mb-3\">Login</h1>\r\n                              <div className=\"form-group\">\r\n                                  <label htmlFor=\"email_field\">Email</label>\r\n                                  <input\r\n                                      type=\"email\"\r\n                                      id=\"email_field\"\r\n                                      className=\"form-control\"\r\n                                      value={email}\r\n                                      onChange={(e) => setEmail(e.target.value)}\r\n                                  />\r\n                              </div>\r\n\r\n                              <div className=\"form-group\">\r\n                                  <label htmlFor=\"password_field\">Password</label>\r\n                                  <input\r\n                                      type=\"password\"\r\n                                      id=\"password_field\"\r\n                                      className=\"form-control\"\r\n                                      value={password}\r\n                                      onChange={(e) => setPassword(e.target.value)}\r\n                                  />\r\n                              </div>\r\n\r\n                              <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                              <button\r\n                                  id=\"login_button\"\r\n                                  type=\"submit\"\r\n                                  className=\"btn btn-block py-3\"\r\n                              >\r\n                                  LOGIN\r\n                              </button>\r\n\r\n                              <Link to =\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n\r\n          )}\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Register.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\Profile.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\UpdateProfile.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\UpdatePassword.js",["227"],"import React, { Fragment, useState, useEffect} from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { updatePassword, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\n\r\n\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('') \r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(isUpdated) {\r\n            alert.success('Password Updated Successfully');\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n   \r\n        dispatch(updatePassword(formData))\r\n    }\r\n\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n          <MetaData title={'Change Password'} />\r\n\r\n          <div className=\"row wrapper\">\r\n              <div className=\"col-10 col-lg-5\">\r\n                  <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                      <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"old_password_field\">Old Password</label>\r\n                          <input\r\n                              type=\"password\"\r\n                              id=\"old_password_field\"\r\n                              className=\"form-control\"\r\n                              value={oldPassword}\r\n                              onChange={(e) => setOldPassword(e.target.value)}\r\n                          />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"new_password_field\">New Password</label>\r\n                          <input\r\n                              type=\"password\"\r\n                              id=\"new_password_field\"\r\n                              className=\"form-control\"\r\n                              value={password}\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                          />\r\n                      </div>\r\n\r\n                      <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                  </form>\r\n              </div>\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default UpdatePassword","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\ForgotPassword.js",["228"],"import React, { Fragment, useState, useEffect} from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { forgotPassword, loadUser, clearErrors } from '../../actions/userActions'\r\n\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, message, loading } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(message) {\r\n            alert.success(message);\r\n\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n   \r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n          <MetaData title={'Forgot Password'} />\r\n\r\n          <div className=\"row wrapper\">\r\n              <div className=\"col-10 col-lg-5\">\r\n                  <form className=\"shadow-lg\" onSubmit={submitHandler} >\r\n                      <h1 className=\"mb-3\">Forgot Password</h1>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"email_field\">Enter Email</label>\r\n                          <input\r\n                              type=\"email\"\r\n                              id=\"email_field\"\r\n                              className=\"form-control\"\r\n                              value={email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                          />\r\n                      </div>\r\n\r\n                      <button\r\n                          id=\"forgot_password_button\"\r\n                          type=\"submit\"\r\n                          className=\"btn btn-block py-3\"\r\n                          disabled={loading ? true : false} >\r\n                          Send Email\r\n                      </button>\r\n\r\n                  </form>\r\n              </div>\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\user\\NewPassword.js",["229"],"import React, { Fragment, useState, useEffect} from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { resetPassword, loadUser, clearErrors } from '../../actions/userActions'\r\n\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        if(error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if(success) {\r\n            alert.success('Password Updated Successfully');\r\n            history.push('/login')\r\n\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n   \r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n  return (\r\n      <Fragment>\r\n          <MetaData title={'New Password Reset'} />\r\n\r\n          <div className=\"row wrapper\">\r\n              <div className=\"col-10 col-lg-5\">\r\n                  <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                      <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"password_field\">Password</label>\r\n                          <input\r\n                              type=\"password\"\r\n                              id=\"password_field\"\r\n                              className=\"form-control\"\r\n                              value={password}\r\n                              onChange={(e) => setPassword(e.target.value)}\r\n                          />\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                          <input\r\n                              type=\"password\"\r\n                              id=\"confirm_password_field\"\r\n                              className=\"form-control\"\r\n                              value={confirmPassword}\r\n                              onChange={(e) => setconfirmPassword(e.target.value)}\r\n                          />\r\n                      </div>\r\n\r\n                      <button\r\n                          id=\"new_password_button\"\r\n                          type=\"submit\"\r\n                          className=\"btn btn-block py-3\">\r\n                          Set Password\r\n                      </button>\r\n\r\n                  </form>\r\n              </div>\r\n          </div>\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n\r\nexport default NewPassword","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\cartActions.js",["230"],"import axios from 'axios'\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\n\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n      \r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name, \r\n            price: data.product.price, \r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })  \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}               \r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n      \r\n    dispatch({\r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n            \r\n    })  \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}               \r\n\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n      \r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n            \r\n    })  \r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n} ","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Cart.js",["231"],"import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">₹{item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">₹{cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\Payment.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\actions\\orderActions.js",["232","233"],"import axios from 'axios'\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.orders\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// update order\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Delete order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\order\\ListOrder.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\NewProduct.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\admin\\ProductReviews.js",["234"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews","C:\\Users\\admin\\Downloads\\SCYLLA WEBSITE\\ELECTRONZ\\frontend\\src\\components\\product\\Product.js",["235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":30,"column":5,"nodeType":"242","messageId":"243","endLine":30,"endColumn":24},{"ruleId":"244","severity":1,"message":"245","line":9,"column":15,"nodeType":"246","endLine":13,"endColumn":17},{"ruleId":"236","replacedBy":"247"},{"ruleId":"238","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":47,"column":8,"nodeType":"251","endLine":47,"endColumn":58,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":35,"column":8,"nodeType":"251","endLine":35,"endColumn":58,"suggestions":"254"},{"ruleId":"240","severity":1,"message":"255","line":8,"column":26,"nodeType":"242","messageId":"243","endLine":8,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":8,"column":26,"nodeType":"242","messageId":"243","endLine":8,"endColumn":34},{"ruleId":"240","severity":1,"message":"255","line":8,"column":25,"nodeType":"242","messageId":"243","endLine":8,"endColumn":33},{"ruleId":"240","severity":1,"message":"256","line":24,"column":13,"nodeType":"242","messageId":"243","endLine":24,"endColumn":17},{"ruleId":"240","severity":1,"message":"257","line":6,"column":10,"nodeType":"242","messageId":"243","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"258","line":15,"column":5,"nodeType":"242","messageId":"243","endLine":15,"endColumn":23},{"ruleId":"240","severity":1,"message":"259","line":19,"column":5,"nodeType":"242","messageId":"243","endLine":19,"endColumn":23},{"ruleId":"240","severity":1,"message":"260","line":5,"column":8,"nodeType":"242","messageId":"243","endLine":5,"endColumn":14},{"ruleId":"244","severity":1,"message":"245","line":9,"column":15,"nodeType":"246","endLine":13,"endColumn":17},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"no-unused-vars","'DELETE_REVIEW_RESET' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["261"],["262"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reviewError'. Either include it or remove the dependency array.","ArrayExpression",["263"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["264"],"'loadUser' is defined but never used.","'data' is assigned a value but never used.","'useAlert' is defined but never used.","'UPDATE_ORDER_RESET' is defined but never used.","'DELETE_ORDER_RESET' is defined but never used.","'Loader' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},"Update the dependencies array to be: [dispatch, alert, error, match.params.id, success, reviewError]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"271","text":"272"},[1514,1564],"[dispatch, alert, error, match.params.id, success, reviewError]",[950,1000],"[dispatch, alert, isAuthenticated, error, history, redirect]"]